{"ast":null,"code":"import _regeneratorRuntime from\"/home/jaked/Documents/learning/node_learning/NASA/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/jaked/Documents/learning/node_learning/NASA/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var API_URL=\"http://localhost:8000\";function httpGetPlanets(){return _httpGetPlanets.apply(this,arguments);}function _httpGetPlanets(){_httpGetPlanets=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(API_URL,\"/planets\"));case 2:response=_context.sent;_context.next=5;return response.json();case 5:return _context.abrupt(\"return\",_context.sent);case 6:case\"end\":return _context.stop();}}},_callee);}));return _httpGetPlanets.apply(this,arguments);}function httpGetLaunches(){return _httpGetLaunches.apply(this,arguments);}function _httpGetLaunches(){_httpGetLaunches=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var response,fetchedLaunches;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(API_URL,\"/launches\"));case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:fetchedLaunches=_context2.sent;return _context2.abrupt(\"return\",fetchedLaunches.sort(function(a,b){return a.flightNumber-b.flightNumber;}));case 7:case\"end\":return _context2.stop();}}},_callee2);}));return _httpGetLaunches.apply(this,arguments);}function httpSubmitLaunch(_x){return _httpSubmitLaunch.apply(this,arguments);}function _httpSubmitLaunch(){_httpSubmitLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(launch){var response;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"\".concat(API_URL,\"/launches\"),{method:\"post\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(launch)});case 3:response=_context3.sent;return _context3.abrupt(\"return\",response);case 7:_context3.prev=7;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0);return _context3.abrupt(\"return\",{ok:false});case 11:case\"end\":return _context3.stop();}}},_callee3,null,[[0,7]]);}));return _httpSubmitLaunch.apply(this,arguments);}function httpAbortLaunch(_x2){return _httpAbortLaunch.apply(this,arguments);}function _httpAbortLaunch(){_httpAbortLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(id){var response;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return fetch(\"\".concat(API_URL,\"/launches/\").concat(id),{method:\"delete\"});case 3:response=_context4.sent;return _context4.abrupt(\"return\",response);case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0);return _context4.abrupt(\"return\",{ok:false});case 11:case\"end\":return _context4.stop();}}},_callee4,null,[[0,7]]);}));return _httpAbortLaunch.apply(this,arguments);}export{httpGetPlanets,httpGetLaunches,httpSubmitLaunch,httpAbortLaunch};","map":{"version":3,"names":["API_URL","httpGetPlanets","fetch","response","json","httpGetLaunches","fetchedLaunches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","console","log","ok","httpAbortLaunch","id"],"sources":["/home/jaked/Documents/learning/node_learning/NASA/client/src/hooks/requests.js"],"sourcesContent":["const API_URL = \"http://localhost:8000\";\n\nasync function httpGetPlanets() {\n  const response = await fetch(`${API_URL}/planets`);\n  return await response.json();\n}\n\nasync function httpGetLaunches() {\n  // Load launches, sort by flight number, and return as JSON.\n  const response = await fetch(`${API_URL}/launches`);\n  const fetchedLaunches = await response.json();\n  return fetchedLaunches.sort((a, b) => {\n    return a.flightNumber - b.flightNumber;\n  });\n}\n\nasync function httpSubmitLaunch(launch) {\n  // Submit given launch data to launch system.\n  try {\n    const response = await fetch(`${API_URL}/launches`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(launch),\n    });\n    return response;\n  } catch (err) {\n    console.log(err);\n    return {\n      ok: false,\n    };\n  }\n}\n\nasync function httpAbortLaunch(id) {\n  // Delete launch with given ID.\n  try {\n    const response = await fetch(`${API_URL}/launches/${id}`, {\n      method: \"delete\",\n    });\n    return response;\n  } catch (err) {\n    console.log(err);\n    return {\n      ok: false,\n    };\n  }\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };\n"],"mappings":"4SAAA,GAAMA,QAAO,CAAG,uBAAhB,C,QAEeC,e,sJAAf,wKACyBC,MAAK,WAAIF,OAAJ,aAD9B,QACQG,QADR,qCAEeA,SAAQ,CAACC,IAAT,EAFf,6G,yDAKeC,gB,yJAAf,8LAEyBH,MAAK,WAAIF,OAAJ,cAF9B,QAEQG,QAFR,uCAGgCA,SAAQ,CAACC,IAAT,EAHhC,QAGQE,eAHR,iDAISA,eAAe,CAACC,IAAhB,CAAqB,SAACC,CAAD,CAAIC,CAAJ,CAAU,CACpC,MAAOD,EAAC,CAACE,YAAF,CAAiBD,CAAC,CAACC,YAA1B,CACD,CAFM,CAJT,0D,0DASeC,iB,8JAAf,kBAAgCC,MAAhC,6KAG2BV,MAAK,WAAIF,OAAJ,cAAwB,CAClDa,MAAM,CAAE,MAD0C,CAElDC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFyC,CAKlDC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf,CAL4C,CAAxB,CAHhC,QAGUT,QAHV,iDAUWA,QAVX,6DAYIe,OAAO,CAACC,GAAR,eAZJ,iCAaW,CACLC,EAAE,CAAE,KADC,CAbX,wE,2DAmBeC,gB,4JAAf,kBAA+BC,EAA/B,6KAG2BpB,MAAK,WAAIF,OAAJ,sBAAwBsB,EAAxB,EAA8B,CACxDT,MAAM,CAAE,QADgD,CAA9B,CAHhC,QAGUV,QAHV,iDAMWA,QANX,6DAQIe,OAAO,CAACC,GAAR,eARJ,iCASW,CACLC,EAAE,CAAE,KADC,CATX,wE,kDAeA,OAASnB,cAAT,CAAyBI,eAAzB,CAA0CM,gBAA1C,CAA4DU,eAA5D"},"metadata":{},"sourceType":"module"}